{"version":3,"file":"util.js","sourceRoot":"","sources":["../lib/util.ts"],"names":[],"mappings":"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","sourcesContent":["import { createHash } from \"crypto\";\n\nexport interface RTPPacket {\n  id: number;\n  timestamp: number;\n  marker: number;\n  padding: number;\n  hasExtensions: number;\n\n  payload: Buffer;\n\n  length: number;\n  paddingLength: number;\n\n  payloadType: number;\n\n  // Additional information added to the Packet\n  wallclockTime?: Date;\n}\n\nexport function parseRTPPacket(buffer: Buffer): RTPPacket {\n  const padding = (buffer[0] >> 5) & 0x01\n  let paddingLength = 0;\n  if (padding == 1) {\n    // padding size is the last byte of the RTP data\n    paddingLength = buffer[buffer.length - 1];\n  }\n  const hasExtensions = (buffer[0] >> 4) & 0x01;\n  const marker = (buffer[1]) >>> 7;\n  const payloadType = buffer[1] & 0x7f;\n  const num_csrc_identifiers = (buffer[0] & 0x0F);\n\n  const payload = buffer.slice((num_csrc_identifiers * 4) + (hasExtensions ? 16 : 12)); // includes padding\n  const length = payload.length;\n\n\n  return {\n    id: buffer.readUInt16BE(2),\n    timestamp: buffer.readUInt32BE(4),\n    marker,\n    padding,\n    payloadType,\n    hasExtensions,\n    payload,\n    length,\n    paddingLength,\n  };\n}\n\nexport interface SenderReport {\n  ntpTimestampMSW: number;\n  ntpTimestampLSW: number;\n  rtpTimestamp: number;\n  senderPacketCount: number;\n  senderOctetCount: number;\n}\n\nexport interface RTCPPacket {\n  buffer: Buffer;\n  version: number;\n  padding: number;\n  receptionReportCount: number;\n  packetType: number;\n  length: number;\n  ssrc: number;\n\n  senderReport?: SenderReport;\n}\n\nexport function parseRTCPPacket(buffer: Buffer): RTCPPacket {\n\n  // Packet Types\n  // SR         Sender Report                200\n  // RR         Receiver Report              201\n  // SDES       Source Description           202\n  // BYE        Goodbye                      203\n  // APP        Application-Defined          204\n  // RTPFB      Generic RTP feedback         205\n  // PSFB       Payload-specific feedback    206\n  // XR         RTCP Extension               207\n  const version = (buffer[0] >> 6);\n  const padding = (buffer[0] >> 5) & 0x01;\n  const receptionReportCount = (buffer[0]) & 0x1F;\n  const packetType = buffer[1];\n  const length = buffer[2] << 8 + buffer[3]; // The length in 32 bit words (not the length in bytes)\n  const ssrc = buffer[4] << 24 + buffer[5] << 16 + buffer[6] << 8 + buffer[7];\n\n  let result: RTCPPacket = {\n    buffer,\n    version,\n    padding,\n    length,\n    ssrc,\n    receptionReportCount,\n    packetType};\n\n  if (packetType == 200) {\n    let senderReport: SenderReport = {\n      ntpTimestampMSW: buffer.readUInt32BE(8),\n      ntpTimestampLSW: buffer.readUInt32BE(12),\n      rtpTimestamp: buffer.readUInt32BE(16),\n      senderPacketCount: buffer.readUInt32BE(20),\n      senderOctetCount: buffer.readUInt32BE(24)\n    };\n\n    result.senderReport = senderReport;\n  }\n\n  return result;\n}\n\n// utility function for using crypto library\nexport function getMD5Hash(str: string): string {\n  const md5 = createHash(\"md5\");\n  md5.update(str);\n\n  return md5.digest(\"hex\");\n}\n\nexport function getSHA256Hash(str: string): string {\n  const sha256 = createHash(\"sha256\"); // use getHashes() to see what is supported\n  sha256.update(str);\n\n  return sha256.digest(\"hex\");\n}\n\nexport interface Transport {\n  protocol: string;\n  parameters: { [key: string]: string };\n}\n\nexport function parseTransport(transport: string): Transport {\n  const parameters: { [key: string]: string } = {};\n\n  const parts = transport.split(\";\");\n  const protocol = parts[0];\n\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    const index = part.indexOf(\"=\");\n\n    if (index > -1 && index !== part.length - 1) {\n      parameters[part.substring(0, index)] = part.substring(index + 1);\n    }\n  }\n\n  return {\n    protocol,\n    parameters\n  };\n}\n\nexport function randInclusive(min: number, max: number): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function generateSSRC(): number {\n  return randInclusive(1, 0xffffffff);\n}\n\n// BitStream classes by 2018 Roger Hardiman, RJH Technical Consultancy Ltd\n// Write to a bitstream and read back as an array\n\nexport class BitStream {\n\n  data: number[] = []; // Array only stores 0 or 1 (one 'bit' per buffer item)\n  // not very efficient on memory\n\n  // Constructor\n  // constructor() {}\n  \n  // Functions\n  AddValue(value: number, num_bits: number): void {\n    // Add each bit to the List\n    for (let i = num_bits - 1; i >= 0; i--) {\n      this.data.push((value >> i) & 0x01);\n    }\n  }\n\n  AddHexString(hex_string: string): void {\n    const hex_chars = hex_string.toUpperCase();\n\n    for (let x = 0; x < hex_chars.length; x++) {\n      const c = hex_chars.charAt(x);\n      if (c == '0') this.AddValue(0, 4);\n      else if (c == '1') this.AddValue(1, 4);\n      else if (c == '2') this.AddValue(2, 4);\n      else if (c == '3') this.AddValue(3, 4);\n      else if (c == '4') this.AddValue(4, 4);\n      else if (c == '5') this.AddValue(5, 4);\n      else if (c == '6') this.AddValue(6, 4);\n      else if (c == '7') this.AddValue(7, 4);\n      else if (c == '8') this.AddValue(8, 4);\n      else if (c == '9') this.AddValue(9, 4);\n      else if (c == 'A') this.AddValue(10, 4);\n      else if (c == 'B') this.AddValue(11, 4);\n      else if (c == 'C') this.AddValue(12, 4);\n      else if (c == 'D') this.AddValue(13, 4);\n      else if (c == 'E') this.AddValue(14, 4);\n      else if (c == 'F') this.AddValue(15, 4);\n    }\n  }\n\n  Read(num_bits: number): number {\n    // Read and remove items from the front of the list of bits\n    if (this.data.length < num_bits) return 0;\n    let result = 0;\n    for (let i = 0; i < num_bits; i++) {\n      result = result << 1;\n      result = result + this.data[0];\n      this.data.shift(); // remove the first item from the array\n    }\n    return result;\n  }\n\n  ToArray(): Buffer {\n    const num_bytes = Math.ceil(this.data.length / 8.0);\n    const array = Buffer.alloc(num_bytes);\n    let ptr = 0;\n    let shift = 7;\n    for (let i = 0; i < this.data.length; i++) {\n      array[ptr] += (this.data[i] << shift);\n      if (shift == 0) {\n        shift = 7;\n        ptr++;\n      }\n      else {\n        shift--;\n      }\n    }\n\n    return array;\n  }\n}\n"]}